{
  "app": {
    "title": "MCP Hub Dashboard",
    "error": "Error",
    "closeButton": "Close",
    "noServers": "No MCP servers available",
    "loading": "Loading...",
    "logout": "Logout",
    "profile": "Profile",
    "changePassword": "Change Password",
    "toggleSidebar": "Toggle Sidebar",
    "welcomeUser": "Welcome, {{username}}",
    "name": "MCP Hub"
  },
  "about": {
    "title": "About",
    "versionInfo": "MCP Hub Version: {{version}}",
    "newVersion": "New version available!",
    "currentVersion": "Current version",
    "newVersionAvailable": "New version {{version}} is available",
    "viewOnGitHub": "View on GitHub",
    "checkForUpdates": "Check for Updates",
    "checking": "Checking for updates..."
  },
  "profile": {
    "viewProfile": "View profile",
    "userCenter": "User Center"
  },
  "sponsor": {
    "label": "Sponsor",
    "title": "Support the Project",
    "rewardAlt": "Reward QR Code",
    "supportMessage": "Support the development of MCP Hub by buying me a coffee!",
    "supportButton": "Support on Ko-fi"
  },
  "wechat": {
    "label": "WeChat",
    "title": "Connect via WeChat",
    "qrCodeAlt": "WeChat QR Code",
    "scanMessage": "Scan this QR code to connect with us on WeChat"
  },
  "discord": {
    "label": "Discord",
    "title": "Join our Discord server",
    "community": "Join our growing community on Discord for support, discussions, and updates!"
  },
  "theme": {
    "title": "Theme",
    "light": "Light",
    "dark": "Dark",
    "system": "System"
  },
  "auth": {
    "login": "Login",
    "loginTitle": "Login to MCP Hub",
    "username": "Username",
    "password": "Password",
    "loggingIn": "Logging in...",
    "emptyFields": "Username and password cannot be empty",
    "loginFailed": "Login failed, please check your username and password",
    "loginError": "An error occurred during login",
    "currentPassword": "Current Password",
    "newPassword": "New Password",
    "confirmPassword": "Confirm Password",
    "passwordsNotMatch": "New password and confirmation do not match",
    "changePasswordSuccess": "Password changed successfully",
    "changePasswordError": "Failed to change password",
    "changePassword": "Change Password",
    "passwordChanged": "Password changed successfully",
    "passwordChangeError": "Failed to change password"
  },
  "server": {
    "addServer": "Add Server",
    "add": "Add",
    "edit": "Edit",
    "delete": "Delete",
    "confirmDelete": "Are you sure you want to delete this server?",
    "deleteWarning": "Deleting server '{{name}}' will remove it and all its data. This action cannot be undone.",
    "status": "Status",
    "tools": "Tools",
    "name": "Server Name",
    "url": "Server URL",
    "apiKey": "API Key",
    "save": "Save",
    "cancel": "Cancel",
    "invalidConfig": "Could not find configuration data for {{serverName}}",
    "addError": "Failed to add server",
    "editError": "Failed to edit server {{serverName}}",
    "deleteError": "Failed to delete server {{serverName}}",
    "updateError": "Failed to update server",
    "editTitle": "Edit Server: {{serverName}}",
    "type": "Server Type",
    "command": "Command",
    "arguments": "Arguments",
    "envVars": "Environment Variables",
    "headers": "HTTP Headers",
    "key": "key",
    "value": "value",
    "enabled": "Enabled",
    "enable": "Enable",
    "disable": "Disable",
    "requestOptions": "Configuration",
    "timeout": "Request Timeout",
    "timeoutDescription": "Timeout for requests to the MCP server (ms)",
    "maxTotalTimeout": "Maximum Total Timeout",
    "maxTotalTimeoutDescription": "Maximum total timeout for requests sent to the MCP server (ms) (Use with progress notifications)",
    "resetTimeoutOnProgress": "Reset Timeout on Progress",
    "resetTimeoutOnProgressDescription": "Reset timeout on progress notifications",
    "remove": "Remove",
    "toggleError": "Failed to toggle server {{serverName}}",
    "alreadyExists": "Server {{serverName}} already exists",
    "invalidData": "Invalid server data provided",
    "notFound": "Server {{serverName}} not found",
    "namePlaceholder": "Enter server name",
    "urlPlaceholder": "Enter server URL",
    "commandPlaceholder": "Enter command",
    "argumentsPlaceholder": "Enter arguments",
    "errorDetails": "Error Details",
    "viewErrorDetails": "View error details",
    "confirmVariables": "Confirm Variable Configuration",
    "variablesDetected": "Variables detected in configuration. Please confirm these variables are properly configured:",
    "detectedVariables": "Detected Variables",
    "confirmVariablesMessage": "Please ensure these variables are properly defined in your runtime environment. Continue adding server?",
    "confirmAndAdd": "Confirm and Add",
    "openapi": {
      "inputMode": "Input Mode",
      "inputModeUrl": "Specification URL",
      "inputModeSchema": "JSON Schema",
      "specUrl": "OpenAPI Specification URL",
      "schema": "OpenAPI JSON Schema",
      "schemaHelp": "Paste your complete OpenAPI JSON schema here",
      "security": "Security Type",
      "securityNone": "None",
      "securityApiKey": "API Key",
      "securityHttp": "HTTP Authentication",
      "securityOAuth2": "OAuth 2.0",
      "securityOpenIdConnect": "OpenID Connect",
      "apiKeyConfig": "API Key Configuration",
      "apiKeyName": "Header/Parameter Name",
      "apiKeyIn": "Location",
      "apiKeyValue": "API Key Value",
      "httpAuthConfig": "HTTP Authentication Configuration",
      "httpScheme": "Authentication Scheme",
      "httpCredentials": "Credentials",
      "oauth2Config": "OAuth 2.0 Configuration",
      "oauth2Token": "Access Token",
      "openIdConnectConfig": "OpenID Connect Configuration",
      "openIdConnectUrl": "Discovery URL",
      "openIdConnectToken": "ID Token"
    }
  },
  "status": {
    "online": "Online",
    "offline": "Offline",
    "connecting": "Connecting"
  },
  "errors": {
    "general": "Something went wrong",
    "network": "Network connection error. Please check your internet connection",
    "serverConnection": "Unable to connect to the server. Please check if the server is running",
    "serverAdd": "Failed to add server. Please check the server status",
    "serverUpdate": "Failed to edit server {{serverName}}. Please check the server status",
    "serverFetch": "Failed to retrieve server data. Please try again later",
    "initialStartup": "The server might be starting up. Please wait a moment as this process can take some time on first launch...",
    "serverInstall": "Failed to install server",
    "failedToFetchSettings": "Failed to fetch settings",
    "failedToUpdateRouteConfig": "Failed to update route configuration",
    "failedToUpdateSmartRoutingConfig": "Failed to update smart routing configuration"
  },
  "common": {
    "processing": "Processing...",
    "save": "Save",
    "cancel": "Cancel",
    "refresh": "Refresh",
    "create": "Create",
    "creating": "Creating...",
    "update": "Update",
    "updating": "Updating...",
    "submitting": "Submitting...",
    "delete": "Delete",
    "remove": "Remove",
    "copy": "Copy",
    "copySuccess": "Copied to clipboard",
    "copyFailed": "Copy failed",
    "close": "Close",
    "confirm": "Confirm"
  },
  "nav": {
    "dashboard": "Dashboard",
    "servers": "Servers",
    "groups": "Groups",
    "users": "Users",
    "userManagement": "User Management",
    "mcpAnalytics": "MCP Analytics",
    "settings": "Settings",
    "changePassword": "Change Password",
    "market": "Market",
    "logs": "Logs"
  },
  "pages": {
    "dashboard": {
      "title": "Dashboard",
      "totalServers": "Total",
      "onlineServers": "Online",
      "offlineServers": "Offline",
      "connectingServers": "Connecting",
      "recentServers": "Recent Servers"
    },
    "servers": {
      "title": "Servers Management"
    },
    "groups": {
      "title": "Group Management"
    },
    "users": {
      "title": "User Management"
    },
    "settings": {
      "title": "Settings",
      "language": "Language",
      "account": "Account Settings",
      "password": "Change Password",
      "appearance": "Appearance",
      "routeConfig": "Security",
      "installConfig": "Installation",
      "smartRouting": "Smart Routing"
    },
    "market": {
      "title": "Server Market - (Data from mcpm.sh)"
    },
    "logs": {
      "title": "System Logs"
    }
  },
  "logs": {
    "filters": "Filters",
    "search": "Search logs...",
    "autoScroll": "Auto-scroll",
    "clearLogs": "Clear logs",
    "loading": "Loading logs...",
    "noLogs": "No logs available.",
    "noMatch": "No logs match the current filters.",
    "mainProcess": "Main Process",
    "childProcess": "Child Process",
    "main": "Main",
    "child": "Child"
  },
  "groups": {
    "add": "Add",
    "addNew": "Add New Group",
    "edit": "Edit Group",
    "delete": "Delete",
    "confirmDelete": "Are you sure you want to delete this group?",
    "deleteWarning": "Deleting group '{{name}}' will remove it and all its server associations. This action cannot be undone.",
    "name": "Group Name",
    "namePlaceholder": "Enter group name",
    "nameRequired": "Group name is required",
    "description": "Description",
    "descriptionPlaceholder": "Enter group description (optional)",
    "createError": "Failed to create group",
    "updateError": "Failed to update group",
    "deleteError": "Failed to delete group",
    "serverAddError": "Failed to add server to group",
    "serverRemoveError": "Failed to remove server from group",
    "addServer": "Add Server to Group",
    "selectServer": "Select a server to add",
    "servers": "Servers in Group",
    "remove": "Remove",
    "noGroups": "No groups available. Create a new group to get started.",
    "noServers": "No servers in this group.",
    "noServerOptions": "No servers available",
    "serverCount": "{{count}} Servers"
  },
  "market": {
    "title": "Server Market",
    "official": "Official",
    "by": "By",
    "unknown": "Unknown",
    "tools": "tools",
    "search": "Search",
    "searchPlaceholder": "Search for servers by name, category, or tags",
    "clearFilters": "Clear",
    "clearCategoryFilter": "",
    "clearTagFilter": "",
    "categories": "Categories",
    "tags": "Tags",
    "showTags": "Show tags",
    "hideTags": "Hide tags",
    "moreTags": "",
    "noServers": "No servers found matching your search",
    "backToList": "Back to list",
    "install": "Install",
    "installing": "Installing...",
    "installed": "Installed",
    "installServer": "Install Server: {{name}}",
    "installSuccess": "Server {{serverName}} installed successfully",
    "author": "Author",
    "license": "License",
    "repository": "Repository",
    "examples": "Examples",
    "arguments": "Arguments",
    "argumentName": "Name",
    "description": "Description",
    "required": "Required",
    "example": "Example",
    "viewSchema": "View schema",
    "fetchError": "Error fetching market servers",
    "serverNotFound": "Server not found",
    "searchError": "Error searching servers",
    "filterError": "Error filtering servers by category",
    "tagFilterError": "Error filtering servers by tag",
    "noInstallationMethod": "No installation method available for this server",
    "showing": "Showing {{from}}-{{to}} of {{total}} servers",
    "perPage": "Per page",
    "confirmVariablesMessage": "Please ensure these variables are properly defined in your runtime environment. Continue installing server?",
    "confirmAndInstall": "Confirm and Install"
  },
  "tool": {
    "run": "Run",
    "running": "Running...",
    "runTool": "Run Tool",
    "cancel": "Cancel",
    "noDescription": "No description available",
    "inputSchema": "Input Schema:",
    "runToolWithName": "Run Tool: {{name}}",
    "execution": "Tool Execution",
    "successful": "Successful",
    "failed": "Failed",
    "result": "Result:",
    "error": "Error",
    "errorDetails": "Error Details:",
    "noContent": "Tool executed successfully but returned no content.",
    "unknownError": "Unknown error occurred",
    "jsonResponse": "JSON Response:",
    "toolResult": "Tool result",
    "noParameters": "This tool does not require any parameters.",
    "selectOption": "Select an option",
    "enterValue": "Enter {{type}} value",
    "enabled": "Enabled",
    "enableSuccess": "Tool {{name}} enabled successfully",
    "disableSuccess": "Tool {{name}} disabled successfully",
    "toggleFailed": "Failed to toggle tool status",
    "parameters": "Tool Parameters",
    "formMode": "Form Mode",
    "jsonMode": "JSON Mode",
    "jsonConfiguration": "JSON Configuration",
    "invalidJsonFormat": "Invalid JSON format",
    "fixJsonBeforeSwitching": "Please fix JSON format before switching to form mode",
    "item": "Item {{index}}",
    "addItem": "Add {{key}} item",
    "enterKey": "Enter {{key}}"
  },
  "settings": {
    "enableGlobalRoute": "Enable Global Route",
    "enableGlobalRouteDescription": "Allow connections to /sse endpoint without specifying a group ID",
    "enableGroupNameRoute": "Enable Group Name Route",
    "enableGroupNameRouteDescription": "Allow connections to /sse endpoint using group names instead of just group IDs",
    "enableBearerAuth": "Enable Bearer Authentication",
    "enableBearerAuthDescription": "Require bearer token authentication for MCP requests",
    "bearerAuthKey": "Bearer Authentication Key",
    "bearerAuthKeyDescription": "The authentication key that will be required in the Bearer token",
    "bearerAuthKeyPlaceholder": "Enter bearer authentication key",
    "skipAuth": "Skip Authentication",
    "skipAuthDescription": "Bypass login requirement for frontend and API access (DEFAULT OFF for security)",
    "requireMcpAuth": "Require MCP Authentication",
    "requireMcpAuthDescription": "Force all MCP service access to require authentication with valid access tokens",
    "pythonIndexUrl": "Python Package Repository URL",
    "pythonIndexUrlDescription": "Set UV_DEFAULT_INDEX environment variable for Python package installation",
    "pythonIndexUrlPlaceholder": "e.g. https://pypi.org/simple",
    "npmRegistry": "NPM Registry URL",
    "npmRegistryDescription": "Set npm_config_registry environment variable for NPM package installation",
    "npmRegistryPlaceholder": "e.g. https://registry.npmjs.org/",
    "installConfig": "Installation",
    "systemConfigUpdated": "System configuration updated successfully",
    "enableSmartRouting": "Enable Smart Routing",
    "enableSmartRoutingDescription": "Enable smart routing feature to search the most suitable tool based on input (using $smart group name)",
    "dbUrl": "PostgreSQL URL (requires pgvector support)",
    "dbUrlPlaceholder": "e.g. postgresql://user:password@localhost:5432/dbname",
    "openaiApiBaseUrl": "OpenAI API Base URL",
    "openaiApiBaseUrlPlaceholder": "https://api.openai.com/v1",
    "openaiApiKey": "OpenAI API Key",
    "openaiApiKeyPlaceholder": "Enter OpenAI API key",
    "openaiApiEmbeddingModel": "OpenAI Embedding Model",
    "openaiApiEmbeddingModelPlaceholder": "text-embedding-3-small",
    "smartRoutingConfigUpdated": "Smart routing configuration updated successfully",
    "smartRoutingRequiredFields": "Database URL and OpenAI API Key are required to enable smart routing",
    "smartRoutingValidationError": "Please fill in the required fields before enabling Smart Routing: {{fields}}"
  },
  "dxt": {
    "upload": "Upload",
    "uploadTitle": "Upload DXT Extension",
    "dropFileHere": "Drop your .dxt file here",
    "orClickToSelect": "or click to select from your computer",
    "invalidFileType": "Please select a valid .dxt file",
    "noFileSelected": "Please select a .dxt file to upload",
    "uploading": "Uploading...",
    "uploadFailed": "Failed to upload DXT file",
    "installServer": "Install MCP Server from DXT",
    "extensionInfo": "Extension Information",
    "name": "Name",
    "version": "Version",
    "description": "Description",
    "author": "Author",
    "tools": "Tools",
    "serverName": "Server Name",
    "serverNamePlaceholder": "Enter a name for this server",
    "install": "Install",
    "installing": "Installing...",
    "installFailed": "Failed to install server from DXT",
    "serverExistsTitle": "Server Already Exists",
    "serverExistsConfirm": "Server '{{serverName}}' already exists. Do you want to override it with the new version?",
    "override": "Override"
  },
  "users": {
    "title": "User Management",
    "description": "Manage system users, permissions, and access tokens",
    "add": "Add User",
    "addNew": "Add New User",
    "edit": "Edit User",
    "editUser": "Edit User",
    "delete": "Delete User",
    "create": "Create User",
    "createUser": "Create User",
    "update": "Update User",
    "username": "Username",
    "password": "Password",
    "newPassword": "New Password",
    "confirmPassword": "Confirm Password",
    "email": "Email",
    "fullName": "Full Name",
    "status": "Status",
    "role": "Role",
    "lastActivity": "Last Activity",
    "actions": "Actions",
    "active": "Active",
    "disabled": "Disabled",
    "enable": "Enable",
    "disable": "Disable",
    "never": "Never",
    "adminRole": "Administrator",
    "admin": "Admin",
    "user": "User",
    "permissions": "Permissions",
    "adminPermissions": "Full system access",
    "userPermissions": "Limited access",
    "currentUser": "You",
    "noUsers": "No users found",
    "noUsersFound": "No users found matching your search",
    "searchPlaceholder": "Search users by username, email, or name",
    "adminRequired": "Administrator access required to manage users",
    "usernameRequired": "Username is required",
    "passwordRequired": "Password is required",
    "passwordTooShort": "Password must be at least 6 characters long",
    "passwordMismatch": "Passwords do not match",
    "usernamePlaceholder": "Enter username",
    "passwordPlaceholder": "Enter password",
    "newPasswordPlaceholder": "Leave empty to keep current password",
    "confirmPasswordPlaceholder": "Confirm new password",
    "createError": "Failed to create user",
    "createSuccess": "User created successfully",
    "updateError": "Failed to update user",
    "updateSuccess": "User updated successfully",
    "deleteError": "Failed to delete user",
    "deleteSuccess": "User deleted successfully",
    "statusUpdateError": "Failed to update user status",
    "statusUpdateSuccess": "User status updated successfully",
    "loadError": "Failed to load users",
    "statsError": "Failed to fetch user statistics",
    "deleteConfirmation": "Are you sure you want to delete user '{{username}}'? This action cannot be undone.",
    "deleteConfirm": "Are you sure you want to delete user {{username}}?",
    "confirmDelete": "Delete User",
    "deleteWarning": "Are you sure you want to delete user '{{username}}'? This action cannot be undone."
  },
  "tokens": {
    "title": "Access Token Management",
    "manage": "Manage Token",
    "hide": "Hide",
    "show": "Show",
    "copy": "Copy",
    "generate": "Generate Token",
    "update": "Update Token",
    "revoke": "Revoke Token",
    "save": "Save",
    "validate": "Validate",
    "noToken": "No token assigned",
    "customToken": "Custom Token",
    "enterToken": "Enter access token",
    "generateSuccess": "Token generated successfully",
    "generateError": "Failed to generate token",
    "updateSuccess": "Token updated successfully",
    "updateError": "Failed to update token",
    "revokeSuccess": "Token revoked successfully",
    "revokeError": "Failed to revoke token",
    "revokeConfirm": "Are you sure you want to revoke this token?",
    "copySuccess": "Token copied to clipboard",
    "copyError": "Failed to copy token",
    "validateError": "Failed to validate token",
    "emptyTokenError": "Token cannot be empty",
    "validToken": "Valid token",
    "invalidToken": "Invalid token",
    "belongsTo": "Belongs to"
  },
  "mcpAnalytics": {
    "title": "MCP Analytics",
    "description": "Monitor and analyze MCP server usage and tool calls",
    "overview": "Overview",
    "userAnalysis": "User Analysis",
    "backToOverview": "Back to Overview",
    "totalCalls": "Total Calls",
    "uniqueUsers": "Unique Users", 
    "uniqueServers": "Unique Servers",
    "uniqueTools": "Unique Tools",
    "topServers": "Most Used Servers",
    "topTools": "Most Used Tools",
    "topUsers": "Most Active Users",
    "recentCalls": "Recent Calls",
    "dailyTrend": "Daily Usage Trend",
    "usageStats": "Usage Statistics",
    "noData": "No data available",
    "loadError": "Failed to load analytics data",
    "refreshData": "Refresh Data",
    "timeRange": "Time Range",
    "last7Days": "Last 7 Days",
    "last30Days": "Last 30 Days",
    "last90Days": "Last 90 Days",
    "serverName": "Server",
    "toolName": "Tool",
    "username": "User",
    "callCount": "Calls",
    "lastCall": "Last Call",
    "success": "Success",
    "failed": "Failed",
    "timestamp": "Time",
    "viewDetails": "View Details",
    "userAnalysisFor": "Analysis for {{username}}",
    "accessDashboard": {
      "title": "User Access Details Dashboard",
      "subtitle": "View all users' MCP service access details with search, filtering and export",
      "showAccessDetails": "View Access Details",
      "backToOverview": "Back to Overview",
      "exportCsv": "Export CSV",
      "exportJson": "Export JSON",
      "search": "Search",
      "searchPlaceholder": "Search users, servers, tools, IP, etc...",
      "filterUser": "User",
      "filterUserPlaceholder": "Filter by username...",
      "filterServer": "Server",
      "filterServerPlaceholder": "Filter by server name...",
      "filterTool": "Tool",
      "filterToolPlaceholder": "Filter by tool name...",
      "filterStatus": "Status",
      "allStatus": "All Status",
      "successStatus": "Success",
      "failedStatus": "Failed",
      "startDate": "Start Date",
      "endDate": "End Date",
      "pageSize": "Page Size",
      "resetFilters": "Reset Filters",
      "userCount": "Users",
      "serverCount": "Servers",
      "toolCount": "Tools",
      "successCount": "Success Calls",
      "failureCount": "Failed Calls",
      "successRate": "Success Rate",
      "noDataTitle": "No Data",
      "noDataMessage": "No access records found for current filters",
      "loadingMessage": "Loading...",
      "errorTitle": "Loading Failed"
    }
  }
}